# EXAMPLE USAGE
# Refer for explanation to following link:
# https://github.com/evilmartians/lefthook/blob/master/docs/full_guide.md
#
pre-push:
  parallel: true
  commands:
    lint:
      files: git diff --name-only HEAD @{push} || git diff --name-only HEAD main
      glob: '{src,common,test}/*.ts'
      run: yarn run eslint {files}
    build:
      run: yarn run build

pre-commit:
  parallel: true
  commands:
    prettier:
      glob: '{src,common,test}/*.ts'
      run: yarn run prettier --check {staged_files}
    generate-graphql-types:
      glob: '{src,common,test}/*.graphql'
      run: yarn generate:graphql-types {staged_files}
    forbidden-files:
      glob: '*.rej'
      run: 'echo "found copier update rejection files: {all_files}. Review them and remove them." && exit 1'
    gitleaks:
      run: gitleaks protect -v --redact --staged -c gitleaks.toml

post-merge:
  commands:
    check-yarn-lock:
      files: 'git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD -- "*yarn.lock"'
      run: 'read -p "yarn.lock was updated. Do you want to run yarn to install? [y/n]" yesno && [[ $yesno == "y" ]] && yarn'
    check-mikroorm-migrations:
      files: 'git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD -- "*migrations/Migration*.ts"'
      run: 'read -q "There are new database migrations. Do you want to run `mikro-orm migration:up`` to migrate? [Y/n]" && NODE_PATH=. mikro-orm migration:up && NODE_PATH=. NODE_ENV=test mikro-orm migration:up' 
